/*
 * Amber API Server
 *
 * Boon Logic Amber API Server
 *
 * The version of the OpenAPI document: 1.0.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BoonAmber.Api;
using BoonAmber.Model;
using BoonAmber.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BoonAmber.Test.Model
{
    /// <summary>
    ///  Class for testing MAmberStatus
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class MAmberStatusTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for MAmberStatus
        //private MAmberStatus instance;

        public MAmberStatusTests()
        {
            // TODO uncomment below to create an instance of MAmberStatus
            //instance = new MAmberStatus();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of MAmberStatus
        /// </summary>
        [Fact]
        public void MAmberStatusInstanceTest()
        {
            // TODO uncomment below to test "IsType" MAmberStatus
            //Assert.IsType<MAmberStatus>(instance);
        }


        /// <summary>
        /// Test the property 'VersionNumber'
        /// </summary>
        [Fact]
        public void VersionNumberTest()
        {
            // TODO unit test for the property 'VersionNumber'
        }
        /// <summary>
        /// Test the property 'MStatus'
        /// </summary>
        [Fact]
        public void MStatusTest()
        {
            // TODO unit test for the property 'MStatus'
        }
        /// <summary>
        /// Test the property 'MMessage'
        /// </summary>
        [Fact]
        public void MMessageTest()
        {
            // TODO unit test for the property 'MMessage'
        }
        /// <summary>
        /// Test the property 'MProgress'
        /// </summary>
        [Fact]
        public void MProgressTest()
        {
            // TODO unit test for the property 'MProgress'
        }
        /// <summary>
        /// Test the property 'MCurrentClusterCount'
        /// </summary>
        [Fact]
        public void MCurrentClusterCountTest()
        {
            // TODO unit test for the property 'MCurrentClusterCount'
        }
        /// <summary>
        /// Test the property 'MRetryCount'
        /// </summary>
        [Fact]
        public void MRetryCountTest()
        {
            // TODO unit test for the property 'MRetryCount'
        }
        /// <summary>
        /// Test the property 'MStreamingWindowSize'
        /// </summary>
        [Fact]
        public void MStreamingWindowSizeTest()
        {
            // TODO unit test for the property 'MStreamingWindowSize'
        }
        /// <summary>
        /// Test the property 'MTotalInferences'
        /// </summary>
        [Fact]
        public void MTotalInferencesTest()
        {
            // TODO unit test for the property 'MTotalInferences'
        }
        /// <summary>
        /// Test the property 'MTotalSamplesWritten'
        /// </summary>
        [Fact]
        public void MTotalSamplesWrittenTest()
        {
            // TODO unit test for the property 'MTotalSamplesWritten'
        }

    }

}
