/*
 * Amber API Server
 *
 * Boon Logic Amber API Server
 *
 * The version of the OpenAPI document: 1.0.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using BoonAmber.Api;
using BoonAmber.Model;
using BoonAmber.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace BoonAmber.Test.Model
{
    /// <summary>
    ///  Class for testing ModelVersion
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ModelVersionTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ModelVersion
        //private ModelVersion instance;

        public ModelVersionTests()
        {
            // TODO uncomment below to create an instance of ModelVersion
            //instance = new ModelVersion();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ModelVersion
        /// </summary>
        [Fact]
        public void ModelVersionInstanceTest()
        {
            // TODO uncomment below to test "IsType" ModelVersion
            //Assert.IsType<ModelVersion>(instance);
        }


        /// <summary>
        /// Test the property 'Release'
        /// </summary>
        [Fact]
        public void ReleaseTest()
        {
            // TODO unit test for the property 'Release'
        }
        /// <summary>
        /// Test the property 'ApiVersion'
        /// </summary>
        [Fact]
        public void ApiVersionTest()
        {
            // TODO unit test for the property 'ApiVersion'
        }
        /// <summary>
        /// Test the property 'Builder'
        /// </summary>
        [Fact]
        public void BuilderTest()
        {
            // TODO unit test for the property 'Builder'
        }
        /// <summary>
        /// Test the property 'ExpertApi'
        /// </summary>
        [Fact]
        public void ExpertApiTest()
        {
            // TODO unit test for the property 'ExpertApi'
        }
        /// <summary>
        /// Test the property 'ExpertCommon'
        /// </summary>
        [Fact]
        public void ExpertCommonTest()
        {
            // TODO unit test for the property 'ExpertCommon'
        }
        /// <summary>
        /// Test the property 'NanoSecure'
        /// </summary>
        [Fact]
        public void NanoSecureTest()
        {
            // TODO unit test for the property 'NanoSecure'
        }
        /// <summary>
        /// Test the property 'SwaggerUi'
        /// </summary>
        [Fact]
        public void SwaggerUiTest()
        {
            // TODO unit test for the property 'SwaggerUi'
        }

    }

}
