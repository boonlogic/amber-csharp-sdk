/*
 * Amber API Server
 *
 * Boon Logic Amber API Server
 *
 * The version of the OpenAPI document: 1.0.3
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = BoonAmber.Client.OpenAPIDateConverter;

namespace BoonAmber.Model
{
    /// <summary>
    /// PostPretrainRequest
    /// </summary>
    [DataContract(Name = "postPretrainRequest")]
    public partial class PostPretrainRequest : IEquatable<PostPretrainRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PostPretrainRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PostPretrainRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PostPretrainRequest" /> class.
        /// </summary>
        /// <param name="data">data (required).</param>
        /// <param name="format">format of &#39;data&#39; field, [csv | b64float] (default to &quot;csv&quot;).</param>
        /// <param name="autotuneConfig">autotuneConfig (default to true).</param>
        public PostPretrainRequest(string data = default(string), string format = "csv", bool autotuneConfig = true)
        {
            // to ensure "data" is required (not null)
            if (data == null)
            {
                throw new ArgumentNullException("data is a required property for PostPretrainRequest and cannot be null");
            }
            this.Data = data;
            // use default value if no "format" provided
            this.Format = format ?? "csv";
            this.AutotuneConfig = autotuneConfig;
        }

        /// <summary>
        /// Gets or Sets Data
        /// </summary>
        [DataMember(Name = "data", IsRequired = true, EmitDefaultValue = false)]
        public string Data { get; set; }

        /// <summary>
        /// format of &#39;data&#39; field, [csv | b64float]
        /// </summary>
        /// <value>format of &#39;data&#39; field, [csv | b64float]</value>
        [DataMember(Name = "format", EmitDefaultValue = false)]
        public string Format { get; set; }

        /// <summary>
        /// Gets or Sets AutotuneConfig
        /// </summary>
        [DataMember(Name = "autotuneConfig", EmitDefaultValue = true)]
        public bool AutotuneConfig { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PostPretrainRequest {\n");
            sb.Append("  Data: ").Append(Data).Append("\n");
            sb.Append("  Format: ").Append(Format).Append("\n");
            sb.Append("  AutotuneConfig: ").Append(AutotuneConfig).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PostPretrainRequest);
        }

        /// <summary>
        /// Returns true if PostPretrainRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of PostPretrainRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PostPretrainRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return
                (
                    this.Data == input.Data ||
                    (this.Data != null &&
                    this.Data.Equals(input.Data))
                ) &&
                (
                    this.Format == input.Format ||
                    (this.Format != null &&
                    this.Format.Equals(input.Format))
                ) &&
                (
                    this.AutotuneConfig == input.AutotuneConfig ||
                    this.AutotuneConfig.Equals(input.AutotuneConfig)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Data != null)
                {
                    hashCode = (hashCode * 59) + this.Data.GetHashCode();
                }
                if (this.Format != null)
                {
                    hashCode = (hashCode * 59) + this.Format.GetHashCode();
                }
                hashCode = (hashCode * 59) + this.AutotuneConfig.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
